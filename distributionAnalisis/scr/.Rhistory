pHisto_angle
pHisto_step_general <-dataCosecha %>%
ggplot(aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..])) +
geom_histogram(binwidth=2, color= "black", aes(fill=as.character(ID))) +
scale_fill_viridis_d()+
theme(panel.spacing = unit(0.8, "lines"),
text = element_text(size = 15))+
theme_bw()+
labs(x= "Distance (in m)", y= "Proportion", fill= "ID")
pHisto_step_general
rangosDist <- list("gamma" = list("mean" = c(0.1, 20), "sd" = c(0.1,20)),
"weibull" = list("shape" = c(0, 2.7), "scale" = c(0.1,15))  ##segun el articulo
)
DF_rangos <- data.frame("value" = c("min", "max"))
DF_rangos <- cbind(DF_rangos, as.data.frame(rangosDist))
kable(DF_rangos, caption = "Minimun and maximum values of the parameters of the distribution")
DF_TOTAL <- data.frame("model"= 0,
"prior_par0_st1_st2"= 0,
"prior_par1_st1_st2" = 0,
"minNegLike" = 0,
"AIC_model" = 0,
"st1_par0"= 0,
"st1_par1"=0,
"st2_par0"=0,
"st2_par1"= 0)
repetitions <- seq(1, 1000,1)
runModel <- "no"
if (runModel == "yes"){
for (modelStep in c("weibull", "gamma")){
print(modelStep)
rangePar0 <- runif(100000, rangosDist[[modelStep]][[1]][1], rangosDist[[modelStep]][[1]][2])
rangePar1 <- runif(100000, rangosDist[[modelStep]][[2]][1], rangosDist[[modelStep]][[2]][2])
for (rep in repetitions){
par0 <- c(sample(rangePar0,1, replace= TRUE),
sample(rangePar0,1, replace= TRUE)) # step mean (two parameters: one for each state)
par1 <- c(sample(rangePar1,1, replace= TRUE),
sample(rangePar1,1, replace= TRUE))
par0 <- round(par0, 4)
par1 <- round(par1, 4)
#print(par0)
#print(par1)
stepPar <- c(par0,par1)
#op1
tryCatch({
m_cosecha<- fitHMM(data = dataCosecha, stepDist = modelStep,
nbStates = 2 , stepPar0 = stepPar, angleDist = "none")
},
error=function(cond){
print("error de parametros")
print(stepPar)
message(cond)
}
)
minNegLike <-  m_cosecha$mod$minimum
AIC_model <- AIC(m_cosecha)
DF_TEMP <- data.frame("model"= modelStep,
"prior_par0_st1_st2"= paste(par0[1], "_", par0[2]),
"prior_par1_st1_st2"=  paste(par1[1], "_", par1[2]),
"minNegLike" = minNegLike,
"AIC_model" = AIC_model,
"st1_par0"= m_cosecha$mle$stepPar[1,1],
"st1_par1"= m_cosecha$mle$stepPar[2,1],
"st2_par0"= m_cosecha$mle$stepPar[1,2],
"st2_par1"= m_cosecha$mle$stepPar[2,2])
DF_TOTAL <- rbind(DF_TOTAL, DF_TEMP)
}
}
DF_TOTAL <- DF_TOTAL%>%
filter(model != 0)
}
#write_csv(DF_TOTAL, "../output/wholeTable_1000_rep_0_20.csv")
DF_TOTAL_1000 <- read.csv("../output/wholeTable_1000_rep_0_20.csv")
DF_TOTAL_1000 <- DF_TOTAL_1000 %>%
filter(model != "lnorm") %>%
separate(prior_par0_st1_st2, c("pr_par0_st1", "pr_par0_st2"), sep= "_", remove = TRUE) %>%
separate(prior_par1_st1_st2, c("pr_par1_st1", "pr_par1_st2"), sep= "_", remove = TRUE)
DF_TOTAL_1000$pr_par0_st1 <- as.numeric(DF_TOTAL_1000$pr_par0_st1)
DF_TOTAL_1000$pr_par1_st1 <- as.numeric(DF_TOTAL_1000$pr_par1_st1)
DF_TOTAL_1000$pr_par0_st2 <- as.numeric(DF_TOTAL_1000$pr_par0_st2)
DF_TOTAL_1000$pr_par1_st2 <- as.numeric(DF_TOTAL_1000$pr_par1_st2)
DF_TOTAL_1000[,seq(2,11,1)] <- round(DF_TOTAL_1000[,seq(2,11,1)], 2)
#here we have the outiers that were removed
DF_1000_OUTLIERS <- DF_TOTAL_1000 %>%
filter(st1_par1 <0.00001 | st2_par1 <0.00001)
DF_1000_OUTLIERS <- DF_1000_OUTLIERS %>%
group_by(model) %>%
mutate(conteo = 1)%>%
mutate(contador = cumsum(conteo))
DF_1000_SIN <- DF_TOTAL_1000 %>%
filter(st1_par1 >0.00001 & st2_par1 >0.00001)
FIG_AIC_model <- DF_1000_SIN %>%
filter(AIC_model != "Inf")%>%
ggplot()+
geom_jitter(aes(x= model, y= minNegLike, shape= model, fill= model), size= 4)+
#scale_fill_manual(values = colorsGris) +
scale_fill_manual(values = groupColors3) +
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()
FIG_AIC_model
DF_TOTAL_MIN <- DF_1000_SIN %>%
group_by(model)%>%
filter(AIC_model == min(AIC_model)) %>%
group_by(model, AIC_model) %>%
mutate(conteo = 1)%>%
mutate(contador= cumsum(conteo))%>%
filter(contador ==1)
DF_TOTAL_MIN$conteo <- NULL
DF_TOTAL_MIN$contador <- NULL
DF_TOTAL_MIN_SHOW <- DF_TOTAL_MIN
names(DF_TOTAL_MIN_SHOW) <- (c("model","pr_st1_p1", "pr_st1_p2", "pr_st2_p1", "pr_st2_p2", "minNegL", "AIC", "s1_p1", "s1_p2", "s2_p2", "s2_p2"))
kable(DF_TOTAL_MIN_SHOW, caption = "Best models (minimal AIC) for each of the distribution. pr:prior, st1: state 1, p1: parameter 1 (shape for weibull and mean for gamma, p2: parameter 2 (scale for weibull and sd for gamma")
modelos_p <- list("gamma" = 0,
"weibull" = 0)
for (i in seq(1,dim(DF_TOTAL_MIN)[1],1)){
par0_p <- as.numeric(c(DF_TOTAL_MIN$pr_par0_st1[i], DF_TOTAL_MIN$pr_par0_st2[i]))
par1_p <- as.numeric(c(DF_TOTAL_MIN$pr_par1_st1[i], DF_TOTAL_MIN$pr_par1_st2[i]))
stepPar0_p <- c(par0_p, par1_p)
#print(stepPar0_p)
#op1
m_cosecha_p<- fitHMM(data = dataCosecha, nbStates = 2 , stepPar0 = stepPar0_p, angleDist = "none", stepDist = as.character(DF_TOTAL_MIN$model[i]))
modelos_p[[as.character(DF_TOTAL_MIN$model[i])]] <- m_cosecha_p
}
plot(modelos_p$gamma, animals = c("I_Car12", "H_Fran9"), ask = FALSE, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
plot(modelos_p$weibull, animals = c("I_Car12", "H_Fran9"), ask = FALSE, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
# DF_1000_OUTLIERS_MELT <- DF_1000_OUTLIERS %>%
#   dplyr:: select(model, st1_par0, st1_par1, st2_par0, st2_par1, contador)%>%
#   melt(id = c("model", "contador")) %>%
#   separate(variable, into = c("state", "parameter"), sep= "_")
#
# DF_par0 <- DF_1000_OUTLIERS_MELT %>%
#   filter(parameter == "par0")
#
# DF_1000_OUTLIERS_MELT <- DF_1000_OUTLIERS_MELT %>%
#   filter(parameter == "par1")
#
# DF_1000_OUTLIERS_MELT <- merge(DF_1000_OUTLIERS_MELT, DF_par0, by= c("model", "contador", "state"))
# FIG_Parameters_OUT <- DF_1000_OUTLIERS_MELT %>%
#   filter(contador <6)%>%
#   ggplot(aes(x= state, y = value.y))+
#   geom_point(col= "black",  size= 2)+
#   geom_errorbar(size=0.5, aes(
#     ymin=value.y- value.x,  ymax=value.y+ value.x), col = "blue") +
#   scale_color_viridis_d()+
#   facet_grid(model~contador)+
#   scale_shape_manual(values = c(21, 24, 22))+
#   theme_bw()
#
# FIG_Parameters_OUT
rweibull(10, 2, 1)
DF_DISTRI <- data.frame("E"= 0, "v" =1)
View(DF_DISTRI)
DF_DISTRI <- data.frame("Distribution"= c("weibull") , "v" = c(2,2))
DF_DISTRI <- data.frame("distribution"= c("weibull"), "values" = rweibull(10, 2.2, 0.8))
View(DF_DISTRI)
DF_weibull_st1 <- data.frame("distribution"= c("weibull"), "state" = 1,  "values" = rweibull(10, 2.2, 0.8))
DF_weibull_st2  <- data.frame("distribution"= c("weibull"), "state" = 2, "values" = rweibull(10, 1.05, 14.45))
DF_gamma_st1  <- data.frame("distribution"= c("gamma"), "state" =1, "values" = rgamma(10, shape= 1.3, rate = 0.075))  #change the mean and sd to shape and rate
DF_gamma_st2  <- data.frame("distribution"= c("gamma"), "state" =2, "values" = rgamma(10, shape= 3.62, rate = 0.845))  #change the mean and sd to shape and rate
DF_DISTRI <- rbind(DF_weibull_st1, DF_weibull_st2, DF_gamma_st1, DF_gamma_st2)
View(DF_DISTRI)
?dgamma
dgamma(1:10, shape = 1, scale = 1)
plot(dgamma(1:10, shape = 1, scale = 1))
plot(dgamma(seq(1, 10, 0.1), shape = 1, scale = 1))
X= seq(1, 120, 1)
DF_weibull_st1 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dweibull(X, 2.2, 0.8))
DF_weibull_st2 <- data.frame("distribution"= c("weibull"), "state" = 2, "X"= X,  "PDF" = dweibull(X, 1.05, 14.45))
DF_weibull_st1 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dweibull(X, 2.2, 0.8))
DF_weibull_st2 <- data.frame("distribution"= c("weibull"), "state" = 2, "X"= X,  "PDF" = dweibull(X, 1.05, 14.45))
DF_gamma_st1 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 1.3, rate = 0.075))
DF_gamma_st2 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
DF_DISTRI <- rbind(DF_weibull_st1, DF_weibull_st2, DF_gamma_st1, DF_gamma_st2)
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_point(aes(x= X, y= PDF))+
facet_wrap(state ~ distribution)
DIS_PLOT
X= seq(1, 120, 1)
DF_weibull_st1 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dweibull(X, 2.2, 0.8))
DF_weibull_st2 <- data.frame("distribution"= c("weibull"), "state" = 2, "X"= X,  "PDF" = dweibull(X, 1.05, 14.45))
DF_gamma_st1 <- data.frame("distribution"= c("gamma"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 1.3, rate = 0.075))
DF_gamma_st2 <- data.frame("distribution"= c("gamma"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
DF_DISTRI <- rbind(DF_weibull_st1, DF_weibull_st2, DF_gamma_st1, DF_gamma_st2)
DF_DISTRI <- rbind(DF_weibull_st1, DF_weibull_st2, DF_gamma_st1, DF_gamma_st2)
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_point(aes(x= X, y= PDF))+
facet_wrap(state ~ distribution)
DIS_PLOT
X= seq(1, 120, 1)
DF_weibull_st1 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dweibull(X, 2.2, 0.8))
DF_weibull_st2 <- data.frame("distribution"= c("weibull"), "state" = 2, "X"= X,  "PDF" = dweibull(X, 1.05, 14.45))
DF_gamma_st1 <- data.frame("distribution"= c("gamma"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 1.3, rate = 0.075))
DF_gamma_st2 <- data.frame("distribution"= c("gamma"), "state" = 2, "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
DF_DISTRI <- rbind(DF_weibull_st1, DF_weibull_st2, DF_gamma_st1, DF_gamma_st2)
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_point(aes(x= X, y= PDF))+
facet_wrap(state ~ distribution)
DIS_PLOT
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF))+
facet_wrap(state ~ distribution)
DIS_PLOT
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF))+
facet_grid(distribution~ distribution, scales = "free_y")+
theme_bw()+
labs(x= "log(Distance Step)", y= "log(Proportion of Rust Effective Steps)", title = paste("maxDistance", limiteSalto))
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF))+
facet_grid(distribution~ distribution, scales = "free_y")+
theme_bw()+
labs(x= "log(Distance Step)", y= "log(Proportion of Rust Effective Steps)", title = "PDF")
DIS_PLOT
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF))+
facet_grid(distribution~ state, scales = "free_y")+
theme_bw()+
labs(x= "log(Distance Step)", y= "log(Proportion of Rust Effective Steps)", title = "PDF")
DIS_PLOT
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF))+
facet_grid(state ~ distribution, scales = "free_y")+
theme_bw()+
labs(x= "log(Distance Step)", y= "log(Proportion of Rust Effective Steps)", title = "PDF")
DIS_PLOT
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF, col= state))+
facet_grid(~ distribution, scales = "free_y")+
theme_bw()+
labs(x= "log(Distance Step)", y= "log(Proportion of Rust Effective Steps)", title = "PDF")
DIS_PLOT
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
theme_bw()+
labs(x= "log(Distance Step)", y= "log(Proportion of Rust Effective Steps)", title = "PDF")
DIS_PLOT
X= seq(1, 120, 1)
DF_weibull_st1 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dweibull(X, shape= 2.2, scale= 0.8))
DF_weibull_st2 <- data.frame("distribution"= c("weibull"), "state" = 2, "X"= X,  "PDF" = dweibull(X, shape= 1.05, scale= 14.45))
DF_gamma_st1 <- data.frame("distribution"= c("gamma"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 1.3, rate = 0.075))
DF_gamma_st2 <- data.frame("distribution"= c("gamma"), "state" = 2, "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
DF_DISTRI <- rbind(DF_weibull_st1, DF_weibull_st2, DF_gamma_st1, DF_gamma_st2)
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
theme_bw()+
labs(x= "log(Distance Step)", y= "log(Proportion of Rust Effective Steps)", title = "PDF")
DIS_PLOT
X= seq(1, 120, 1)
DF_weibull_st1 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dweibull(X, shape= 2.05, scale= 4.71))
DF_weibull_st2 <- data.frame("distribution"= c("weibull"), "state" = 2, "X"= X,  "PDF" = dweibull(X, shape= 1.05, scale= 14.45))
DF_gamma_st1 <- data.frame("distribution"= c("gamma"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 1.3, rate = 0.075))
DF_gamma_st2 <- data.frame("distribution"= c("gamma"), "state" = 2, "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
DF_DISTRI <- rbind(DF_weibull_st1, DF_weibull_st2, DF_gamma_st1, DF_gamma_st2)
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
theme_bw()+
labs(x= "log(Distance Step)", y= "log(Proportion of Rust Effective Steps)", title = "PDF")
DIS_PLOT
DIS_PLOT <- DF_DISTRI %>%
ggplot()+
geom_line(aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)
DIS_PLOT
P1<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black") +
geom_line(data = DF_TOTAL_MIN, aes(x= X, y= PDF, col= as.factor(state)))+
scale_color_manual(values =
groupColors2)+
theme(panel.spacing = unit(0.8, "lines"),
text = element_text(size = 15))+
theme_bw()+
labs(x= "Distance (in m)", y= "Proportion", fill= "ID")
P1
P1<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black") +
geom_line(data = DF_DISTRI aes(x= X, y= PDF, col= as.factor(state)))+
P1<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black") +
geom_line(data = DF_DISTRI, aes(x= X, y= PDF, col= as.factor(state)))+
scale_color_manual(values =
groupColors2)
P1
P1<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black") +
geom_line(data = DF_DISTRI, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)
P1
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "white") +
geom_line(data = DF_DISTRI, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
labs(x= "log(Distance Step)", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "white") +
geom_line(data = DF_DISTRI, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "log(Distance Step)", y= "Probability Density Function")
DIS_PLOT
?geom_line
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "gray") +
geom_line(data = DF_DISTRI, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "log(Distance Step)", y= "Probability Density Function")
DIS_PLOT
?geom_line
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "gray") +
geom_line(data = DF_DISTRI, size= 2, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "log(Distance Step)", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "gray") +
geom_line(data = DF_DISTRI, size= 2, aes(x= X, y= PDF, col= as.factor(state), linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "log(Distance Step)", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "gray") +
geom_line(data = DF_DISTRI, size= 1.5, aes(x= X, y= PDF, col= as.factor(state), linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "log(Distance Step)", y= "Probability Density Function")
source("~/.active-rstudio-document", echo=TRUE)
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "white") +
geom_line(data = DF_DISTRI, size= 1.5, aes(x= X, y= PDF, linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "log(Distance Step)", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "gray") +
geom_line(data = DF_DISTRI, size= 1.2, aes(x= X, y= PDF, col= as.factor(state), linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "log(Distance Step)", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1.2, aes(x= X, y= PDF, col= as.factor(state), linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Distance", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state), linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Distance", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state), linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
scale_linetype_manual(values= c(1,4))+
theme_bw()+
labs(x= "Distance", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state), linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
scale_linetype_manual(values= c(1,1))+
theme_bw()+
labs(x= "Distance", y= "Probability Density Function")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state), linetype= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
scale_linetype_manual(values= c(1,1))+
theme_bw()+
labs(x= "Distance", y= "Probability Density Function", col= "State")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "black", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Distance", y= "Probability Density Function", col= "State")
DIS_PLOT
FIG_AIC_model <- DF_1000_SIN %>%
filter(AIC_model != "Inf")%>%
ggplot()+
geom_jitter(aes(x= model, y= minNegLike, shape= model), size= 4)+
#scale_fill_manual(values = colorsGris) +
scale_fill_manual(values = groupColors3) +
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()
FIG_AIC_model
FIG_AIC_model <- DF_1000_SIN %>%
filter(AIC_model != "Inf")%>%
ggplot()+
geom_jitter(aes(x= model, y= minNegLike, shape= model, fill= model), size= 4)+
scale_fill_manual(values = colorsGris) +
#scale_fill_manual(values = groupColors3) +
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()
FIG_AIC_model
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "white", fill= "#AAAAAA") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Step size (in m)", y= "Probability Density Function", col= "State")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "#CCCCCC", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Step size (in m)", y= "Probability Density Function", col= "State")
DIS_PLOT
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, size= 0.5, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "white", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Step size (in m)", y= "Probability Density Function", col= "State")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, size= 0.01, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "white", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Step size (in m)", y= "Probability Density Function", col= "State")
DIS_PLOT
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, size= 0.1, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "white", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Step size (in m)", y= "Probability Density Function", col= "State")
DIS_PLOT
plotStates(modelos_p$gamma)
plotStates(modelos_p$gamma)
?plotStates()
p1 <- plot(modelos_p$weibull, animals = c("I_Car12", "H_Fran9"), ask = FALSE, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
p1
View(p1)
plot(modelos_p$weibull, animals = c("I_Car12", "H_Fran9"), ask = FALSE, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
plot(modelos_p$weibull, animals = c("I_Car12", "H_Fran9"), ask = T, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
plot(modelos_p$weibull, animals = c("I_Car12", "H_Fran9"), ask = F, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
plot(modelos_p$weibull, animals = c("I_Car12", "H_Fran9"), ask = F, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
plotStates(modelos_p$weibull, ask = F, animals = c("I_Car12", "H_Fran9"))
plot(modelos_p$weibull, animals = c("H_Fran9", "I_Car12"), ask = F, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
