group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
#DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA <- read.csv("../data/datosParaFiguras.csv")
DF_HARVEST_GAMMA$state <-  (-DF_HARVEST_GAMMA$state) + 3
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "1"] <- "Closest (Short Steps)"
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "2"] <- "Skipping (Medium-Long Steps)"
DF_HARVEST_GAMMA <- DF_HARVEST_GAMMA %>%
separate(ID, into = c("Finca", "IDREC"), sep = "_", remove = T)
DF_HARVEST_GAMMA_H <- DF_HARVEST_GAMMA%>%
filter(Finca == "H")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA_I <- DF_HARVEST_GAMMA %>%
filter(Finca == "I")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA <- rbind(DF_HARVEST_GAMMA_I, DF_HARVEST_GAMMA_H)
rm(DF_HARVEST_GAMMA_I)
rm(DF_HARVEST_GAMMA_H)
#cambiams por E de ecolo
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "H"] <- "C"
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "I"] <- "E"
DF_HARVEST_RESUMEN <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
FIG_MAP_GAMMA<- DF_HARVEST_GAMMA %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA)) %>%
ggplot(aes(x= x, y = y)) +
geom_path(aes(col= as.factor(state), group = (Finca_ID)), size= 1)+
geom_point(size=1, aes(fill= "Tree"))+ # es importante que sea path, porque así lo hace según coo estan ordenados los
scale_color_manual(values= mycolsStates)+
facet_wrap(~Finca_ID, ncol = 3)+
geom_text(x = 140, y = 10, aes(label = observation), data = DF_HARVEST_RESUMEN)+
geom_text(x = 125, y = 10, label= "N =")+
theme_bw()+
theme(text = element_text(size = 15))+
theme(strip.background =element_rect(fill="white"))+
#theme(strip.background = element_blank(), panel.spacing = unit(0.8, "lines"), text = element_text(size = 15))+
labs(x= "X (in m)", y= "Y (in m)", col= "State", fill= "")
#ggsave(FIG_MAP_GAMMA, filename= "/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/output/finalFigures/mapHarvest_.png", height = 12, width = 10, device = "png")
ggsave(FIG_MAP_GAMMA, filename= "../output/finalFigures/mapHarvest_.png", height = 14, width = 12, device = "png")
#DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA <- read.csv("../data/datosParaFiguras.csv")
DF_HARVEST_GAMMA$state <-  (-DF_HARVEST_GAMMA$state) + 3
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "1"] <- "Close (Short Steps)"
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "2"] <- "Skip (Medium-Long Steps)"
DF_HARVEST_GAMMA <- DF_HARVEST_GAMMA %>%
separate(ID, into = c("Finca", "IDREC"), sep = "_", remove = T)
DF_HARVEST_GAMMA_H <- DF_HARVEST_GAMMA%>%
filter(Finca == "H")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA_I <- DF_HARVEST_GAMMA %>%
filter(Finca == "I")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA <- rbind(DF_HARVEST_GAMMA_I, DF_HARVEST_GAMMA_H)
rm(DF_HARVEST_GAMMA_I)
rm(DF_HARVEST_GAMMA_H)
#cambiams por E de ecolo
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "H"] <- "C"
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "I"] <- "E"
DF_HARVEST_RESUMEN <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
FIG_MAP_GAMMA<- DF_HARVEST_GAMMA %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA)) %>%
ggplot(aes(x= x, y = y)) +
geom_path(aes(col= as.factor(state), group = (Finca_ID)), size= 1)+
geom_point(size=1, aes(fill= "Tree"))+ # es importante que sea path, porque así lo hace según coo estan ordenados los
scale_color_manual(values= mycolsStates)+
facet_wrap(~Finca_ID, ncol = 3)+
geom_text(x = 140, y = 10, aes(label = observation), data = DF_HARVEST_RESUMEN)+
geom_text(x = 125, y = 10, label= "N =")+
theme_bw()+
theme(text = element_text(size = 15))+
theme(strip.background =element_rect(fill="white"))+
#theme(strip.background = element_blank(), panel.spacing = unit(0.8, "lines"), text = element_text(size = 15))+
labs(x= "X (in m)", y= "Y (in m)", col= "State", fill= "")
#ggsave(FIG_MAP_GAMMA, filename= "/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/output/finalFigures/mapHarvest_.png", height = 12, width = 10, device = "png")
ggsave(FIG_MAP_GAMMA, filename= "../output/finalFigures/mapHarvest_.png", height = 14, width = 12, device = "png")
#DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA <- read.csv("../data/datosParaFiguras.csv")
DF_HARVEST_GAMMA$state <-  (-DF_HARVEST_GAMMA$state) + 3
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "1"] <- "Nearby (Short Steps)"
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "2"] <- "Far (Medium-Long Steps)"
DF_HARVEST_GAMMA <- DF_HARVEST_GAMMA %>%
separate(ID, into = c("Finca", "IDREC"), sep = "_", remove = T)
DF_HARVEST_GAMMA_H <- DF_HARVEST_GAMMA%>%
filter(Finca == "H")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA_I <- DF_HARVEST_GAMMA %>%
filter(Finca == "I")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA <- rbind(DF_HARVEST_GAMMA_I, DF_HARVEST_GAMMA_H)
rm(DF_HARVEST_GAMMA_I)
rm(DF_HARVEST_GAMMA_H)
#cambiams por E de ecolo
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "H"] <- "C"
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "I"] <- "E"
DF_HARVEST_RESUMEN <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
FIG_MAP_GAMMA<- DF_HARVEST_GAMMA %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA)) %>%
ggplot(aes(x= x, y = y)) +
geom_path(aes(col= as.factor(state), group = (Finca_ID)), size= 1)+
geom_point(size=1, aes(fill= "Tree"))+ # es importante que sea path, porque así lo hace según coo estan ordenados los
scale_color_manual(values= mycolsStates)+
facet_wrap(~Finca_ID, ncol = 3)+
geom_text(x = 140, y = 10, aes(label = observation), data = DF_HARVEST_RESUMEN)+
geom_text(x = 125, y = 10, label= "N =")+
theme_bw()+
theme(text = element_text(size = 15))+
theme(strip.background =element_rect(fill="white"))+
#theme(strip.background = element_blank(), panel.spacing = unit(0.8, "lines"), text = element_text(size = 15))+
labs(x= "X (in m)", y= "Y (in m)", col= "State", fill= "")
#ggsave(FIG_MAP_GAMMA, filename= "/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/output/finalFigures/mapHarvest_.png", height = 12, width = 10, device = "png")
ggsave(FIG_MAP_GAMMA, filename= "../output/finalFigures/mapHarvest_.png", height = 14, width = 12, device = "png")
binaryPlot <- DF_HARVEST_GAMMA %>%
ggplot(aes(x= contador , y= ID_POR_FINCA, fill= as.factor(state)))+
geom_tile(col= "black")+
facet_wrap(~Finca, scales= "free_y", ncol= 1)+
scale_fill_manual(values= c("#FFFFFF", "black"))+
scale_y_continuous(breaks=seq(1,6,1))+
theme_bw()+
theme(strip.background =element_rect(fill="white"))+
theme(text = element_text(size = 20))+
labs(x= "Steps", y= "ID", fill= "State", shape= "State")
X= seq(1, 120, 1)
#este no es igual que en el otro codigo ,porque invert los estados
DF_gamma_st1 <- data.frame("distribution"= c("gamma"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
View(DF_gamma_st1)
#este no es igual que en el otro codigo ,porque invert los estados
DF_gamma_st1 <- data.frame("distribution"= c("gamma"), "state" = "Nearby (Short Steps)", "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
DF_gamma_st2 <- data.frame("distribution"= c("gamma"), "state" = "Far (Long Steps)", "X"= X,  "PDF" = dgamma(X, shape= 1.3, rate = 0.075))
DF_DISTRI <- rbind(DF_gamma_st1, DF_gamma_st2)
DF_DISTRI$logPDF <- log(DF_DISTRI$PDF)
CAJADIST <- DF_HARVEST_GAMMA %>%
ggplot()+
geom_boxplot(aes(x= step), fill= "#EEEEEE")+
theme_bw()+
theme(text = element_text(size = 20))+
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())+
labs(x= "Step length (in m)", y= "")
DIS_PLOT<- ggplot() +
geom_histogram(data= DF_HARVEST_GAMMA, size= 0.2,
aes(x= as.numeric(step),
y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]),
binwidth=1, color= "black", fill= "#EEEEEE") +
geom_line(data = DF_DISTRI, size= 0.8, aes(x= X, y= PDF, col= as.factor(state)))+
scale_color_manual(values =
mycolsStates)+
theme_bw()+
theme(text = element_text(size = 20))+
labs(x= "Step length (in m)", y= "Frecuency", col= "State")
DIS_PLOT_COM <- DIS_PLOT + annotation_custom(ggplotGrob(CAJADIST), xmin = 15, xmax = 100, ymin = 0.1, ymax = 0.2)
View(DIS_PLOT_COM)
DIS_PLOT_COM
mycolsStates <-c("#fd9706", "#1b4a64" )
#DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA <- read.csv("../data/datosParaFiguras.csv")
DF_HARVEST_GAMMA$state <-  (-DF_HARVEST_GAMMA$state) + 3
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "1"] <- "Close (Short Steps)"
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "2"] <- "Far (Medium-Long Steps)"
DF_HARVEST_GAMMA <- DF_HARVEST_GAMMA %>%
separate(ID, into = c("Finca", "IDREC"), sep = "_", remove = T)
DF_HARVEST_GAMMA_H <- DF_HARVEST_GAMMA%>%
filter(Finca == "H")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA_I <- DF_HARVEST_GAMMA %>%
filter(Finca == "I")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA <- rbind(DF_HARVEST_GAMMA_I, DF_HARVEST_GAMMA_H)
rm(DF_HARVEST_GAMMA_I)
rm(DF_HARVEST_GAMMA_H)
#cambiams por E de ecolo
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "H"] <- "C"
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "I"] <- "E"
DF_HARVEST_RESUMEN <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
FIG_MAP_GAMMA<- DF_HARVEST_GAMMA %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA)) %>%
ggplot(aes(x= x, y = y)) +
geom_path(aes(col= as.factor(state), group = (Finca_ID)), size= 1)+
geom_point(size=1, aes(fill= "Tree"))+ # es importante que sea path, porque así lo hace según coo estan ordenados los
scale_color_manual(values= mycolsStates)+
facet_wrap(~Finca_ID, ncol = 3)+
geom_text(x = 140, y = 10, aes(label = observation), data = DF_HARVEST_RESUMEN)+
geom_text(x = 125, y = 10, label= "N =")+
theme_bw()+
theme(text = element_text(size = 15))+
theme(strip.background =element_rect(fill="white"))+
#theme(strip.background = element_blank(), panel.spacing = unit(0.8, "lines"), text = element_text(size = 15))+
labs(x= "X (in m)", y= "Y (in m)", col= "State", fill= "")
#ggsave(FIG_MAP_GAMMA, filename= "/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/output/finalFigures/mapHarvest_.png", height = 12, width = 10, device = "png")
ggsave(FIG_MAP_GAMMA, filename= "../output/finalFigures/mapHarvest_.png", height = 14, width = 12, device = "png")
binaryPlot <- DF_HARVEST_GAMMA %>%
ggplot(aes(x= contador , y= ID_POR_FINCA, fill= as.factor(state)))+
geom_tile(col= "black")+
facet_wrap(~Finca, scales= "free_y", ncol= 1)+
scale_fill_manual(values= c("#FFFFFF", "black"))+
scale_y_continuous(breaks=seq(1,6,1))+
theme_bw()+
theme(strip.background =element_rect(fill="white"))+
theme(text = element_text(size = 20))+
labs(x= "Steps", y= "ID", fill= "State", shape= "State")
X= seq(1, 120, 1)
#este no es igual que en el otro codigo ,porque invert los estados
DF_gamma_st1 <- data.frame("distribution"= c("gamma"), "state" = "Close (Short Steps)", "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
DF_gamma_st2 <- data.frame("distribution"= c("gamma"), "state" = "Far (Long Steps)", "X"= X,  "PDF" = dgamma(X, shape= 1.3, rate = 0.075))
DF_DISTRI <- rbind(DF_gamma_st1, DF_gamma_st2)
DF_DISTRI$logPDF <- log(DF_DISTRI$PDF)
CAJADIST <- DF_HARVEST_GAMMA %>%
ggplot()+
geom_boxplot(aes(x= step), fill= "#EEEEEE")+
theme_bw()+
theme(text = element_text(size = 20))+
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())+
labs(x= "Step length (in m)", y= "")
DIS_PLOT<- ggplot() +
geom_histogram(data= DF_HARVEST_GAMMA, size= 0.2,
aes(x= as.numeric(step),
y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]),
binwidth=1, color= "black", fill= "#EEEEEE") +
geom_line(data = DF_DISTRI, size= 0.8, aes(x= X, y= PDF, col= as.factor(state)))+
scale_color_manual(values =
mycolsStates)+
theme_bw()+
theme(text = element_text(size = 20))+
labs(x= "Step length (in m)", y= "Frecuency", col= "State")
DIS_PLOT_COM <- DIS_PLOT + annotation_custom(ggplotGrob(CAJADIST), xmin = 15, xmax = 100, ymin = 0.1, ymax = 0.2)
ggsave(DIS_PLOT_COM, filename= "../output/finalFigures/histoGAMMA.png", height = 6, width = 10, device = "png")
DIS_PLOT<- ggplot() +
geom_histogram(data= DF_HARVEST_GAMMA, size= 0.2,
aes(x= as.numeric(step),
y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]),
binwidth=1, color= "black", fill= "#EEEEEE") +
geom_line(data = DF_DISTRI, size= 0.8, aes(x= X, y= PDF, col= as.factor(state)))+
scale_color_manual(values =
mycolsStates)+
theme_bw()+
theme(text = element_text(size = 20))+
labs(x= "Step length (in m)", y= "Frequency", col= "State")
DIS_PLOT_COM <- DIS_PLOT + annotation_custom(ggplotGrob(CAJADIST), xmin = 15, xmax = 100, ymin = 0.1, ymax = 0.2)
ggsave(DIS_PLOT_COM, filename= "../output/finalFigures/histoGAMMA.png", height = 6, width = 10, device = "png")
dataStates <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA, state)%>%
summarise(numStates = sum(conteo))
View(dataStates)
dataStates <- dataStates %>%
ungroup()%>%  #no entiendo que estaba agrupado, supongo que el ID con el state...
complete(Finca, ID_POR_FINCA, state)%>%
filter(state=="Far (Medium-Long Steps)")
dataStates$numStates[is.na(dataStates$numStates)] <- 0
dataTempTot <-  DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA) %>%
summarise(totalStep = sum(conteo))
dataStates$totalStep <- dataTempTot$totalStep
dataStates$percentage_ST2 <- (dataStates$numStates/dataStates$totalStep)*100
HIST_ST1 <- dataStates %>%
ggplot(col= "black", aes(x= Finca, y= percentage_ST2,
))+
geom_boxplot(aes(fill= as.factor(Finca)))+
geom_point(size= 3, aes(fill= as.factor(Finca)), shape= 21)+
geom_segment(aes(x= 0, xend= 3, y=3.8, yend= 3.8), linetype= 2)+
scale_fill_manual(values= c("#AAAAAA", "white"))+
theme_bw()+
theme(text = element_text(size = 20))+
labs(x= "Farm", y= "Percentage of steps in state 2", fill= "Farm")
FIG_STATES <- binaryPlot + HIST_ST1 + plot_layout(widths = c(2, 1))
#ggsave(FIG_STATES, filename= "../output/finalFigures/figStates_.png", height = 6, width = 12, device = "png")
ggsave(FIG_STATES, filename= "../output/finalFigures/figStates_.pdf", height = 6, width = 12, device = "pdf")
binaryPlot <- DF_HARVEST_GAMMA %>%
ggplot(aes(x= contador , y= ID_POR_FINCA, fill= as.factor(state)))+
geom_tile(col= "black")+
facet_wrap(~Finca, scales= "free_y", ncol= 1)+
scale_fill_manual(values= c("#FFFFFF", "black"))+
scale_y_continuous(breaks=seq(1,6,1))+
theme_bw()+
theme(strip.background =element_rect(fill="white"))+
theme(text = element_text(size = 20))+
theme(legend.position = "top")
binaryPlot
HIST_ST1 <- dataStates %>%
ggplot(col= "black", aes(x= Finca, y= percentage_ST2,
))+
geom_boxplot(aes(fill= as.factor(Finca)))+
geom_point(size= 3, aes(fill= as.factor(Finca)), shape= 21)+
geom_segment(aes(x= 0, xend= 3, y=3.8, yend= 3.8), linetype= 2)+
scale_fill_manual(values= c("#AAAAAA", "white"))+
theme_bw()+
theme(text = element_text(size = 20))+
theme(legend.position = "None")+
labs(x= "Farm", y= "Percentage of medium-long steps", fill= "Farm")
HIST_ST1
binaryPlot <- DF_HARVEST_GAMMA %>%
ggplot(aes(x= contador , y= ID_POR_FINCA, fill= as.factor(state)))+
geom_tile(col= "black")+
facet_wrap(~Finca, scales= "free_y", ncol= 1)+
scale_fill_manual(values= c("#FFFFFF", "black"))+
scale_y_continuous(breaks=seq(1,6,1))+
theme_bw()+
theme(strip.background =element_rect(fill="white"))+
theme(text = element_text(size = 20))+
theme(legend.position = "bottom")+
scale_fill_discrete(labels=c("dei", "do2"))+
labs(x= "Steps", y= "ID", fill= "State", shape= "State")
binaryPlot
binaryPlot <- DF_HARVEST_GAMMA %>%
ggplot(aes(x= contador , y= ID_POR_FINCA, fill= as.factor(state)))+
geom_tile(col= "black")+
facet_wrap(~Finca, scales= "free_y", ncol= 1)+
scale_fill_manual(values= c("#FFFFFF", "black"), labels=c("dei", "do2"))+
scale_y_continuous(breaks=seq(1,6,1))+
theme_bw()+
theme(strip.background =element_rect(fill="white"))+
theme(text = element_text(size = 20))+
theme(legend.position = "bottom")+
labs(x= "Steps", y= "ID", fill= "State", shape= "State")
binaryPlot
DF_HARVEST_RES_porStates <- DF_HARVEST_GAMMA %>%
group_by(Finca, state)%>%
summarise(meanStep = mean(step), sdStep = sd(step), maxStep = max(step), minStep = min(step))
View(DF_HARVEST_RES_porStates)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(moveHMM)
library(knitr)
library(reshape2)
colorsGris <- c("black","#555555", "white")
groupColors3 <- c("#021128", "#fd9706", "#1b4a64" )
groupColors2 <- c("#021128", "#fd9706")
mycols3c <-c("#759580", "#1b4a64")
#load the data
WP_COSECHA_UTM_SP <- read.csv("../data/cleanData_wayPointsCoffee_UTM.csv", stringsAsFactors = FALSE )
#punctual modifications
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>%
mutate(finca = replace(finca, finca == "Ecological", "E")) %>%
mutate(finca = replace(finca, finca == "Conventional", "C"))
#normalization of UTM
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>% rowwise() %>%
group_by(finca, ID_POR_FINCA, pante)%>%
mutate(xNorm = x_UTM - min(x_UTM)) %>%
mutate(yNorm = y_UTM - min(y_UTM))
#now the precision (not the accuracy) of the GPS goes to 5 decimal points (lat y lot) and this is equivalent to ~1m
#so we can round the xNorm and y yNorm
WP_COSECHA_UTM_SP$xNorm <- round(WP_COSECHA_UTM_SP$xNorm, 0)
WP_COSECHA_UTM_SP$yNorm <- round(WP_COSECHA_UTM_SP$yNorm, 0)
#we remove some spurious data were delta = 0
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>%
filter(delta !=0)%>%
unite("Finca_ID", finca, ID_POR_FINCA, remove = TRUE)
#we create this ID column to prepare the data for movehmm
WP_COSECHA_UTM_SP_PRE <- WP_COSECHA_UTM_SP %>%
dplyr::select("ID" = Finca_ID, xNorm, yNorm)
#we remove the pante information as it is not relevant for the analysis
WP_COSECHA_UTM_SP_PRE$pante <- NULL
View(WP_COSECHA_UTM_SP)
summary(WP_COSECHA_UTM_SP$delta)
sd(WP_COSECHA_UTM_SP$delta)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(moveHMM)
library(knitr)
library(reshape2)
colorsGris <- c("black","#555555", "white")
groupColors3 <- c("#021128", "#fd9706", "#1b4a64" )
groupColors2 <- c("#021128", "#fd9706")
mycols3c <-c("#759580", "#1b4a64")
#load the data
WP_COSECHA_UTM_SP <- read.csv("../data/cleanData_wayPointsCoffee_UTM.csv", stringsAsFactors = FALSE )
#punctual modifications
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>%
mutate(finca = replace(finca, finca == "Ecological", "E")) %>%
mutate(finca = replace(finca, finca == "Conventional", "C"))
#normalization of UTM
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>% rowwise() %>%
group_by(finca, ID_POR_FINCA, pante)%>%
mutate(xNorm = x_UTM - min(x_UTM)) %>%
mutate(yNorm = y_UTM - min(y_UTM))
#now the precision (not the accuracy) of the GPS goes to 5 decimal points (lat y lot) and this is equivalent to ~1m
#so we can round the xNorm and y yNorm
WP_COSECHA_UTM_SP$xNorm <- round(WP_COSECHA_UTM_SP$xNorm, 0)
WP_COSECHA_UTM_SP$yNorm <- round(WP_COSECHA_UTM_SP$yNorm, 0)
#we remove some spurious data were delta = 0
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>%
filter(delta !=0)%>%
unite("Finca_ID", finca, ID_POR_FINCA, remove = TRUE)
#we create this ID column to prepare the data for movehmm
WP_COSECHA_UTM_SP_PRE <- WP_COSECHA_UTM_SP %>%
dplyr::select("ID" = Finca_ID, xNorm, yNorm)
#we remove the pante information as it is not relevant for the analysis
WP_COSECHA_UTM_SP_PRE$pante <- NULL
View(WP_COSECHA_UTM_SP)
WP_time<- WP_COSECHA_UTM_SP %>%
group_by("Finca_ID")%>%
mutate(conteo = 1)%>%
summarise("DELTA_TOTAL" = sum(delta), "TreeTotal" = sum(conteo))
View(WP_time)
WP_time<- WP_COSECHA_UTM_SP %>%
group_by(Finca_ID)%>%
mutate(conteo = 1)%>%
summarise("DELTA_TOTAL" = sum(delta), "TreeTotal" = sum(conteo))
View(WP_time)
View(WP_COSECHA_UTM_SP_PRE)
#we create this ID column to prepare the data for movehmm
WP_COSECHA_UTM_SP_DELTAS <- WP_COSECHA_UTM_SP %>%
dplyr::select("ID" = Finca_ID, xNorm, yNorm, delta)
#we remove the pante information as it is not relevant for the analysis
WP_COSECHA_UTM_SP_PRE_DELTAS$pante <- NULL
#we create this ID column to prepare the data for movehmm
WP_COSECHA_UTM_SP_DELTAS <- WP_COSECHA_UTM_SP %>%
dplyr::select("ID" = Finca_ID, xNorm, yNorm, delta, altura..ft.)
#we create this ID column to prepare the data for movehmm
WP_COSECHA_UTM_SP_CALCULOS <- WP_COSECHA_UTM_SP %>%
dplyr::select("ID" = Finca_ID, xNorm, yNorm, delta, altura..ft., pante)
dataCosechaCALCULOS <- prepData(WP_COSECHA_UTM_SP_CALCULOS, type= "UTM", coordNames = c("xNorm", "yNorm"))
View(dataCosechaCALCULOS)
dataCosechaCALCULOS <- dataCosechaCALCULOS%>%
filter(step!= 0)  #we remove the zeros
dataRES_time<- dataCosechaCALCULOS %>%
group_by(Finca_ID)%>%
mutate(conteo = 1)%>%
summarise("DELTA_TOTAL" = sum(delta), "TreeTotal" = sum(conteo))
dataRES_time<- dataCosechaCALCULOS %>%
group_by(ID)%>%
mutate(conteo = 1)%>%
summarise("DELTA_TOTAL" = sum(delta), "TreeTotal" = sum(conteo))
View(dataRES_time)
dataRES_time<- dataCosechaCALCULOS %>%
group_by(ID)%>%
mutate(conteo = 1)%>%
summarise("DELTA_TOTAL" = sum(delta), "TREE_TOTAL" = sum(conteo))%>%
mutate(treeTime = TREE_TOTAL/DELTA_TOTAL)
dataRES_time<- dataCosechaCALCULOS %>%
group_by(ID)%>%
mutate(conteo = 1)%>%
summarise("DELTA_TOTAL" = sum(delta), "TREE_TOTAL" = sum(conteo))%>%
mutate(treeTime = TREE_TOTAL/DELTA_TOTAL*60)
View(WP_COSECHA_UTM_SP)
#we create this ID column to prepare the data for movehmm
WP_COSECHA_UTM_SP_CALCULOS <- WP_COSECHA_UTM_SP %>%
dplyr::select("ID" = Finca_ID, xNorm, yNorm, delta, altura..ft., pante, tamanio.cuadrilla)
dataCosechaCALCULOS <- prepData(WP_COSECHA_UTM_SP_CALCULOS, type= "UTM", coordNames = c("xNorm", "yNorm"))
dataCosechaCALCULOS <- dataCosechaCALCULOS%>%
filter(step!= 0)  #we remove the zeros
dataRES_time<- dataCosechaCALCULOS %>%
group_by(ID)%>%
mutate(conteo = 1)%>%
summarise("DELTA_TOTAL" = sum(delta), "TREE_TOTAL" = sum(conteo), "WORKERS_TOTAL" = mean(tamanio.cuadrilla))%>%
mutate(treeTime = TREE_TOTAL/DELTA_TOTAL*60)
DF_ALTURAS <- dataCosechaCALCULOS %>%
group_by(ID, pante) %>%
summarise(MAX_ALT = max(altura..ft.), MIN_ALT = min(altura..ft.), DeltaMean = mean(delta))
View(DF_ALTURAS)
DF_ALTURAS$DIF_ft <- DF_ALTURAS$MAX_ALT - DF_ALTURAS$MIN_ALT
DF_ALTURAS$DIF_m <- DF_ALTURAS$DIF_ft * 0.3048
DF_ALTURAS_E <- DF_ALTURAS %>% filter (finca=="Ecological")
View(DF_ALTURAS)
#median delta per traje
WP_COSECHA_UTM_SP <- read.csv("../data/cleanData_wayPointsCoffee_UTM.csv", stringsAsFactors = FALSE )
#punctual modifications
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>%
mutate(finca = replace(finca, finca == "Ecological", "E")) %>%
mutate(finca = replace(finca, finca == "Conventional", "C"))
#normalization of UTM
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>% rowwise() %>%
group_by(finca, ID_POR_FINCA, pante)%>%
mutate(xNorm = x_UTM - min(x_UTM)) %>%
mutate(yNorm = y_UTM - min(y_UTM))
#now the precision (not the accuracy) of the GPS goes to 5 decimal points (lat y lot) and this is equivalent to ~1m
#so we can round the xNorm and y yNorm
WP_COSECHA_UTM_SP$xNorm <- round(WP_COSECHA_UTM_SP$xNorm, 0)
WP_COSECHA_UTM_SP$yNorm <- round(WP_COSECHA_UTM_SP$yNorm, 0)
#we remove some spurious data were delta = 0
WP_COSECHA_UTM_SP <- WP_COSECHA_UTM_SP %>%
filter(delta !=0)%>%
unite("Finca_ID", finca, ID_POR_FINCA, remove = TRUE)
#we create this ID column to prepare the data for movehmm
WP_COSECHA_UTM_SP_CALCULOS <- WP_COSECHA_UTM_SP %>%
dplyr::select("ID" = Finca_ID, xNorm, yNorm, delta, altura..ft., pante, tamanio.cuadrilla)
dataCosechaCALCULOS <- prepData(WP_COSECHA_UTM_SP_CALCULOS, type= "UTM", coordNames = c("xNorm", "yNorm"))
dataCosechaCALCULOS <- dataCosechaCALCULOS%>%
filter(step!= 0)  #we remove the zeros
dataRES_time<- dataCosechaCALCULOS %>%
group_by(ID)%>%
mutate(conteo = 1)%>%
summarise("DELTA_TOTAL" = sum(delta), "TREE_TOTAL" = sum(conteo), "WORKERS_TOTAL" = mean(tamanio.cuadrilla))%>%
mutate(treeTime = TREE_TOTAL/DELTA_TOTAL*60)
DF_ALTURAS <- dataCosechaCALCULOS %>%
group_by(ID, pante) %>%
summarise(MAX_ALT = max(altura..ft.), MIN_ALT = min(altura..ft.), DeltaMean = mean(delta))
DF_ALTURAS$DIF_ft <- DF_ALTURAS$MAX_ALT - DF_ALTURAS$MIN_ALT
DF_ALTURAS$DIF_m <- DF_ALTURAS$DIF_ft * 0.3048
write.csv(dataRES_time, "../output/diferenciasFinca_parte1.csv")
write.csv(DF_ALTURAS, "../output/diferenciasFinca_parte2_alturas.csv")
