}
DF_TOTAL <- DF_TOTAL%>%
filter(model != 0)
}
#write_csv(DF_TOTAL, "../output/wholeTable_1000_rep_0_20.csv")
DF_TOTAL_1000 <- read.csv("../output/wholeTable_1000_rep_0_20.csv")
DF_TOTAL_1000 <- DF_TOTAL_1000 %>%
filter(model != "lnorm") %>%
separate(prior_par0_st1_st2, c("pr_par0_st1", "pr_par0_st2"), sep= "_", remove = TRUE) %>%
separate(prior_par1_st1_st2, c("pr_par1_st1", "pr_par1_st2"), sep= "_", remove = TRUE)
DF_TOTAL_1000$pr_par0_st1 <- as.numeric(DF_TOTAL_1000$pr_par0_st1)
DF_TOTAL_1000$pr_par1_st1 <- as.numeric(DF_TOTAL_1000$pr_par1_st1)
DF_TOTAL_1000$pr_par0_st2 <- as.numeric(DF_TOTAL_1000$pr_par0_st2)
DF_TOTAL_1000$pr_par1_st2 <- as.numeric(DF_TOTAL_1000$pr_par1_st2)
DF_TOTAL_1000[,seq(2,11,1)] <- round(DF_TOTAL_1000[,seq(2,11,1)], 2)
#here we have the outiers that were removed
DF_1000_OUTLIERS <- DF_TOTAL_1000 %>%
filter(st1_par1 <0.00001 | st2_par1 <0.00001)
DF_1000_OUTLIERS <- DF_1000_OUTLIERS %>%
group_by(model) %>%
mutate(conteo = 1)%>%
mutate(contador = cumsum(conteo))
DF_1000_SIN <- DF_TOTAL_1000 %>%
filter(st1_par1 >0.00001 & st2_par1 >0.00001)
FIG_AIC_model <- DF_1000_SIN %>%
filter(AIC_model != "Inf")%>%
ggplot()+
geom_jitter(aes(x= model, y= minNegLike, shape= model, fill= model), size= 4)+
scale_fill_manual(values = c("#AAAAAA", "#FFFFFF")) +
#scale_fill_manual(values = groupColors3) +
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()
FIG_AIC_model
DF_TOTAL_MIN <- DF_1000_SIN %>%
group_by(model)%>%
filter(AIC_model == min(AIC_model)) %>%
group_by(model, AIC_model) %>%
mutate(conteo = 1)%>%
mutate(contador= cumsum(conteo))%>%
filter(contador ==1)
DF_TOTAL_MIN$conteo <- NULL
DF_TOTAL_MIN$contador <- NULL
DF_TOTAL_MIN_SHOW <- DF_TOTAL_MIN
names(DF_TOTAL_MIN_SHOW) <- (c("model","pr_st1_p1", "pr_st1_p2", "pr_st2_p1", "pr_st2_p2", "minNegL", "AIC", "s1_p1", "s1_p2", "s2_p2", "s2_p2"))
kable(DF_TOTAL_MIN_SHOW, caption = "Best models for each of the distributions. pr:prior, st1: state 1, p1: parameter 1 (shape for weibull and mean for gamma, p2: parameter 2 (scale for weibull and sd for gamma).")
finalParameters <- read.csv("./tableParameters.csv")
finalParameters[,2] <- round(finalParameters[,2],2)
finalParameters[,3] <- round(finalParameters[,3],2)
kable(finalParameters, caption = "Final parameters for both gamma and weibull distributions. For the gamma distribution $\\alpha = \\mu/\\sigma^2$; $\\beta = \\mu^2/\\sigma^2$; $\\theta = 1/\\beta$.")
X= seq(1, 120, 1)
DF_weibull_st1 <- data.frame("distribution"= c("weibull"), "state" = 1, "X"= X,  "PDF" = dweibull(X, shape= 2.05, scale= 4.71))
DF_weibull_st2 <- data.frame("distribution"= c("weibull"), "state" = 2, "X"= X,  "PDF" = dweibull(X, shape= 1.05, scale= 14.45))
DF_gamma_st1 <- data.frame("distribution"= c("gamma"), "state" = 1, "X"= X,  "PDF" = dgamma(X, shape= 1.3, rate = 0.075))
DF_gamma_st2 <- data.frame("distribution"= c("gamma"), "state" = 2, "X"= X,  "PDF" = dgamma(X, shape= 3.62, rate = 0.845))
DF_DISTRI <- rbind(DF_weibull_st1, DF_weibull_st2, DF_gamma_st1, DF_gamma_st2)
DIS_PLOT<- ggplot() +
geom_histogram(data= dataCosecha, size= 0.2, aes(x= as.numeric(step), y=(..count..)/tapply(..count..,..PANEL..,sum)[..PANEL..]), binwidth=2, color= "white", fill= "#CCCCCC") +
geom_line(data = DF_DISTRI, size= 1, aes(x= X, y= PDF, col= as.factor(state)))+
facet_grid(~ distribution, scales = "free_y")+
scale_color_manual(values =
groupColors2)+
theme_bw()+
labs(x= "Step size (in m)", y= "Probability Density Function", col= "State")
DIS_PLOT
modelos_p <- list("gamma" = 0,
"weibull" = 0)
for (i in seq(1,dim(DF_TOTAL_MIN)[1],1)){
par0_p <- as.numeric(c(DF_TOTAL_MIN$pr_par0_st1[i], DF_TOTAL_MIN$pr_par0_st2[i]))
par1_p <- as.numeric(c(DF_TOTAL_MIN$pr_par1_st1[i], DF_TOTAL_MIN$pr_par1_st2[i]))
stepPar0_p <- c(par0_p, par1_p)
#print(stepPar0_p)
#op1
m_cosecha_p<- fitHMM(data = dataCosecha, nbStates = 2 , stepPar0 = stepPar0_p, angleDist = "none", stepDist = as.character(DF_TOTAL_MIN$model[i]))
modelos_p[[as.character(DF_TOTAL_MIN$model[i])]] <- m_cosecha_p
}
#plotStates(modelos_p$gamma, ask = F, animals = c( "H_Fran9", "I_Car12"))
plot(modelos_p$gamma, animals = c("H_Fran9", "I_Car12"), ask = F, plotTracks = TRUE, breaks = 100, col = groupColors2, lwd=3.0)
dataCosecha_V <- dataCosecha
dataCosecha_V$state <- viterbi(modelos_p$gamma)
dataCosecha_V <- dataCosecha_V %>%
mutate(conteo = 1)%>%
group_by(ID) %>%
mutate(contador = cumsum(conteo))
binaryPlot <- dataCosecha_V %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(aes(x= contador , y= ID, fill= as.factor(state)))+
geom_tile(col= "white")+
facet_wrap(~Farm, scales= "free_y")+
scale_fill_manual(values= groupColors2)+
theme_bw()
dataStates <- dataCosecha_V %>%
group_by(ID, state)%>%
summarise(numStates = sum(conteo))
dataStates <- dataStates %>%
ungroup()%>%  #no entiendo que estaba agrupado, supongo que el ID con el state...
complete(ID, state)
dataStates$numStates[is.na(dataStates$numStates)] <- 0
###AQUI MEQEUDEEEEEE FALTA HACER LA GRAFICA DE PORCENTAJE; VS FINCA; VS LONGITUD DE RECPRRIDO Y YA
binaryPlot
binaryPlot <- dataCosecha_V %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(aes(x= contador , y= ID, fill= as.factor(state)))+
geom_tile()+
facet_wrap(~Farm, scales= "free_y")+
scale_fill_manual(values= groupColors2)+
theme_bw()
binaryPlot
dataStates <- dataCosecha_V %>%
group_by(ID, state)%>%
summarise(numStates = sum(conteo))
View(dataStates)
dataTempTot <-  dataCosecha_V %>%
group_by(ID)%>%
summarise(numStates = sum(conteo))
View(dataTempTot)
dataStates <- dataStates %>%
ungroup()%>%  #no entiendo que estaba agrupado, supongo que el ID con el state...
complete(ID, state)
dataStates$numStates[is.na(dataStates$numStates)] <- 0
dataStates <- dataCosecha_V %>%
group_by(ID, state)%>%
summarise(numStates = sum(conteo))
dataStates <- dataStates %>%
ungroup()%>%  #no entiendo que estaba agrupado, supongo que el ID con el state...
complete(ID, state)%>%
filter(state==1)
dataStates$numStates[is.na(dataStates$numStates)] <- 0
dataTempTot <-  dataCosecha_V %>%
group_by(ID)%>%
summarise(totalStep = sum(conteo))
dataStates$totalStep <- dataTempTot$totalStep
View(dataStates)
dataStates$percentage_ST1 <- (dataStates$numStates/dataStates$totalStep)*100
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(aes(x= totalStep , y= percentage_ST1, fill= as.factor(Farm)))+
geom_point()+
facet_wrap(~Farm, scales= "free_y")+
scale_color_manual(values= groupColors2)+
theme_bw()
binaryPlot
perST1_plot
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(aes(x= totalStep , y= percentage_ST1, col= as.factor(Farm)))+
geom_point()+
scale_color_manual(values= mycols3c)+
theme_bw()
perST1_plot
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(aes(x= totalStep , y= percentage_ST1, shape= as.factor(farm), col= as.factor(Farm)))+
geom_point()+
scale_color_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()
perST1_plot
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(aes(x= totalStep , y= percentage_ST1, shape= as.factor(Farm), col= as.factor(Farm)))+
geom_point()+
scale_color_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()
perST1_plot
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(col= "black", aes(x= totalStep , y= percentage_ST1, shape= as.factor(Farm), fill= as.factor(Farm)))+
geom_point()+
scale_fill_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()
perST1_plot
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(col= "black", aes(x= totalStep , y= percentage_ST1, shape= as.factor(Farm), fill= as.factor(Farm)))+
geom_point()+
scale_fill_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()+
legend(x= "Total number of steps", y= "% of steps from State 1", fill= "Farm", shape= "Farm")
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(col= "black", aes(x= totalStep , y= percentage_ST1, shape= as.factor(Farm), fill= as.factor(Farm)))+
geom_point()+
scale_fill_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()+
labs(x= "Total number of steps", y= "% of steps from State 1", fill= "Farm", shape= "Farm")
perST1_plot
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(col= "black", aes(x= totalStep , y= percentage_ST1, shape= as.factor(Farm), fill= as.factor(Farm)))+
geom_point(size= 3)+
scale_fill_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()+
labs(x= "Total number of steps", y= "% of steps from State 1", fill= "Farm", shape= "Farm")
perST1_plot
FIG_AIC_model <- DF_1000_SIN %>%
filter(AIC_model != "Inf")%>%
ggplot()+
geom_jitter(aes(x= model, y= minNegLike, shape= model, fill= model), size= 4)+
scale_fill_manual(values = c("#AAAAAA", "#FFFFFF")) +
#scale_fill_manual(values = groupColors3) +
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()+
labs(x= "Distribution", y= "minimum negative log likelihood", shape= "Distribution", fill= distribution )
FIG_AIC_model <- DF_1000_SIN %>%
filter(AIC_model != "Inf")%>%
ggplot()+
geom_jitter(aes(x= model, y= minNegLike, shape= model, fill= model), size= 4)+
scale_fill_manual(values = c("#AAAAAA", "#FFFFFF")) +
#scale_fill_manual(values = groupColors3) +
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()+
labs(x= "Distribution", y= "minimum negative log likelihood", shape= "Distribution", fill= "Distribution")
FIG_AIC_model
View(DF_1000_SIN)
table(viterbi(m_cosecha_p))
modelos_p
table(viterbi(modelos_p$gamma))
42/(42+1093)
42/(42+1093)*100
table(viterbi(modelos_p$weibull))
59/(1076+59)
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(col= "black", aes(x= totalStep , y= percentage_ST1, shape= as.factor(Farm), fill= as.factor(Farm)))+
geom_point(size= 3)+
geom_segment(aes(x= 2, xmax= 4, y=2, ymax= 5))+
scale_fill_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()+
labs(x= "Total number of steps", y= "% of steps from State 1", fill= "Farm", shape= "Farm")
perST1_plot
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(col= "black", aes(x= totalStep , y= percentage_ST1, shape= as.factor(Farm), fill= as.factor(Farm)))+
geom_point(size= 3)+
geom_segment(aes(x= 2, xend= 4, y=2, yend= 5))+
scale_fill_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()+
labs(x= "Total number of steps", y= "% of steps from State 1", fill= "Farm", shape= "Farm")
perST1_plot
#https://cran.r-project.org/web/packages/moveHMM/vignettes/moveHMM-guide.pdf
#https://theomichelot.github.io/software/
#https://statisticsbyjim.com/probability/weibull-distribution/
summary(dataStates)
perST1_plot <- dataStates %>%
separate(ID, sep= "_", into = c("Farm", "ID"), remove = T) %>%
ggplot(col= "black", aes(x= totalStep , y= percentage_ST1, shape= as.factor(Farm), fill= as.factor(Farm)))+
geom_point(size= 3)+
geom_segment(aes(x= 60, xend= 160, y=3.8, yend= 3.8), linetype= 2)+
scale_fill_manual(values= mycols3c)+
scale_shape_manual(values = c(21, 24, 22))+
theme_bw()+
labs(x= "Total number of steps", y= "% of steps from State 1", fill= "Farm", shape= "Farm")
perST1_plot
DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA$state <-  (-DF_HARVEST_GAMMA$state) + 3
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "1"] <- "1 (short steps)"
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "2"] <- "2 (long steps)"
DF_HARVEST_GAMMA <- DF_HARVEST_GAMMA %>%
separate(ID, into = c("Finca", "IDREC"), sep = "_", remove = T)
DF_HARVEST_GAMMA_H <- DF_HARVEST_GAMMA%>%
filter(Finca == "H")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA_I <- DF_HARVEST_GAMMA %>%
filter(Finca == "I")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA <- rbind(DF_HARVEST_GAMMA_I, DF_HARVEST_GAMMA_H)
rm(DF_HARVEST_GAMMA_I)
rm(DF_HARVEST_GAMMA_H)
#cambiams por E de ecolo
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "H"] <- "C"
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "I"] <- "E"
DF_HARVEST_RESUMEN <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
FIG_MAP_GAMMA<- DF_HARVEST_GAMMA %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA)) %>%
ggplot(aes(x= x, y = y)) +
geom_path(aes(col= as.factor(state), group = (Finca_ID)), size= 1)+
geom_point(size=1, aes(fill= "Tree"))+ # es importante que sea path, porque así lo hace según coo estan ordenados los
scale_color_manual(values= mycolsStates)+
facet_wrap(~Finca_ID, ncol = 3)+
geom_text(x = 140, y = 10, aes(label = observation), data = DF_HARVEST_RESUMEN)+
geom_text(x = 125, y = 10, label= "N =")+
theme_bw()+
theme(text = element_text(size = 15))+
theme(strip.background =element_rect(fill="white"))+
#theme(strip.background = element_blank(), panel.spacing = unit(0.8, "lines"), text = element_text(size = 15))+
labs(x= "X (in m)", y= "Y (in m)", col= "State", fill= "")
library(patchwork)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(moveHMM)
library(knitr)
library(reshape2)
colorsGris <- c("black","#555555", "white")
groupColors3 <- c("#021128", "#fd9706", "#1b4a64" )
groupColors2 <- c("#021128", "#fd9706")
mycols3c <-c("#759580", "#1b4a64")
mycolsStates <-c("#1b4a64", "#fd9706" )
DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA$state <-  (-DF_HARVEST_GAMMA$state) + 3
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "1"] <- "1 (short steps)"
DF_HARVEST_GAMMA$state[DF_HARVEST_GAMMA$state == "2"] <- "2 (long steps)"
DF_HARVEST_GAMMA <- DF_HARVEST_GAMMA %>%
separate(ID, into = c("Finca", "IDREC"), sep = "_", remove = T)
DF_HARVEST_GAMMA_H <- DF_HARVEST_GAMMA%>%
filter(Finca == "H")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA_I <- DF_HARVEST_GAMMA %>%
filter(Finca == "I")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA <- rbind(DF_HARVEST_GAMMA_I, DF_HARVEST_GAMMA_H)
rm(DF_HARVEST_GAMMA_I)
rm(DF_HARVEST_GAMMA_H)
#cambiams por E de ecolo
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "H"] <- "C"
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "I"] <- "E"
DF_HARVEST_RESUMEN <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
FIG_MAP_GAMMA<- DF_HARVEST_GAMMA %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA)) %>%
ggplot(aes(x= x, y = y)) +
geom_path(aes(col= as.factor(state), group = (Finca_ID)), size= 1)+
geom_point(size=1, aes(fill= "Tree"))+ # es importante que sea path, porque así lo hace según coo estan ordenados los
scale_color_manual(values= mycolsStates)+
facet_wrap(~Finca_ID, ncol = 3)+
geom_text(x = 140, y = 10, aes(label = observation), data = DF_HARVEST_RESUMEN)+
geom_text(x = 125, y = 10, label= "N =")+
theme_bw()+
theme(text = element_text(size = 15))+
theme(strip.background =element_rect(fill="white"))+
#theme(strip.background = element_blank(), panel.spacing = unit(0.8, "lines"), text = element_text(size = 15))+
labs(x= "X (in m)", y= "Y (in m)", col= "State", fill= "")
FIG_MAP_GAMMA
library(patchwork)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(moveHMM)
library(knitr)
library(reshape2)
colorsGris <- c("black","#555555", "white")
groupColors3 <- c("#021128", "#fd9706", "#1b4a64" )
groupColors2 <- c("#021128", "#fd9706")
mycols3c <-c("#759580", "#1b4a64")
mycolsStates <-c("#1b4a64", "#fd9706" )
#DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA <- read.csv("../data/datosParaFiguras.csv")
DF_HARVEST_GAMMA$state <-  (-DF_HARVEST_GAMMA$state) + 3
DF_HARVEST_GAMMA <- DF_HARVEST_GAMMA %>%
separate(ID, into = c("Finca", "IDREC"), sep = "_", remove = T)
DF_HARVEST_GAMMA_H <- DF_HARVEST_GAMMA%>%
filter(Finca == "H")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA_I <- DF_HARVEST_GAMMA %>%
filter(Finca == "I")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA <- rbind(DF_HARVEST_GAMMA_I, DF_HARVEST_GAMMA_H)
rm(DF_HARVEST_GAMMA_I)
rm(DF_HARVEST_GAMMA_H)
#cambiams por E de ecolo
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "H"] <- "C"
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "I"] <- "E"
DF_HARVEST_RESUMEN <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
View(DF_HARVEST_RESUMEN)
#I. We load the data and modify it
WP_COSECHA_UTM_SP <- read.csv("../data/cleanData_wayPointsCoffee_UTM.csv", stringsAsFactors = FALSE )
View(WP_COSECHA_UTM_SP)
WP_ALTURAS <- WP_COSECHA_UTM_SP %>%
group_by(ID_REC, finca, pante) %>%
summarise(MAX_ALT = max(altura..ft.), MIN_ALT = min(altura..ft.), DeltaMean = mean(delta))
WP_ALTURAS <- WP_COSECHA_UTM_SP %>%
group_by(ID_POR_FINCA, finca, pante) %>%
summarise(MAX_ALT = max(altura..ft.), MIN_ALT = min(altura..ft.), DeltaMean = mean(delta))
WP_ALTURAS$DIF_ft <- WP_ALTURAS$MAX_ALT - WP_ALTURAS$MIN_ALT
WP_ALTURAS$DIF_m <- WP_ALTURAS$DIF_ft * 0.3048
WP_ALTURAS_I <- WP_ALTURAS %>% filter (finca=="Irlanda")
WP_ALTURAS_H <- WP_ALTURAS %>% filter (finca=="Hamburgo")
View(WP_ALTURAS)
#I. We load the data and modify it
WP_COSECHA_UTM_SP <- read.csv("../data/cleanData_wayPointsCoffee_UTM.csv", stringsAsFactors = FALSE )
WP_ALTURAS <- WP_COSECHA_UTM_SP %>%
group_by(ID_POR_FINCA, finca, pante) %>%
summarise(MAX_ALT = max(altura..ft.), MIN_ALT = min(altura..ft.), DeltaMean = mean(delta))
WP_ALTURAS$DIF_ft <- WP_ALTURAS$MAX_ALT - WP_ALTURAS$MIN_ALT
WP_ALTURAS$DIF_m <- WP_ALTURAS$DIF_ft * 0.3048
WP_ALTURAS_E <- WP_ALTURAS %>% filter (finca=="Ecological")
WP_ALTURAS_C <- WP_ALTURAS %>% filter (finca=="Conventional")
mean(WP_ALTURAS_C$DIF_m)
sd(WP_ALTURAS_C$DIF_m)
mean(WP_ALTURAS_E$DIF_m)
sd(WP_ALTURAS_E$DIF_m)
View(WP_ALTURAS_E)
mean(WP_ALTURAS_C$DeltaMean)
sd(WP_ALTURAS_C$DeltaMean)
mean(WP_ALTURAS_E$DeltaMean)
sd(WP_ALTURAS_E$DeltaMean)
View(WP_ALTURAS_H)
View(WP_ALTURAS_C)
#I. We load the data and modify it
WP_COSECHA_UTM_SP <- read.csv("../data/cleanData_wayPointsCoffee_UTM.csv", stringsAsFactors = FALSE )
WP_ALTURAS <- WP_COSECHA_UTM_SP %>%
group_by(ID_POR_FINCA, finca) %>%
summarise(MAX_ALT = max(altura..ft.), MIN_ALT = min(altura..ft.), DeltaMean = mean(delta))
WP_ALTURAS$DIF_ft <- WP_ALTURAS$MAX_ALT - WP_ALTURAS$MIN_ALT
WP_ALTURAS$DIF_m <- WP_ALTURAS$DIF_ft * 0.3048
WP_ALTURAS_E <- WP_ALTURAS %>% filter (finca=="Ecological")
WP_ALTURAS_C <- WP_ALTURAS %>% filter (finca=="Conventional")
mean(WP_ALTURAS_C$DIF_m)
sd(WP_ALTURAS_C$DIF_m)
mean(WP_ALTURAS_E$DIF_m)
sd(WP_ALTURAS_E$DIF_m)
mean(WP_ALTURAS_C$DeltaMean)
sd(WP_ALTURAS_C$DeltaMean)
mean(WP_ALTURAS_E$DeltaMean)
sd(WP_ALTURAS_E$DeltaMean)
hist(WP_COSECHA_UTM_SP$delta)
hist(WP_COSECHA_UTM_SP$delta)
dataState1 <- DF_HARVEST_GAMMA %>% filter(state ==1)
#> View(dataState1)
#> max(dataState1$step)
#[1] 13.41641
dataState2 <- DF_HARVEST_GAMMA %>% filter(state ==2)
#DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA <- read.csv("../data/datosParaFiguras.csv")
View(DF_HARVEST_GAMMA)
library(patchwork)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(moveHMM)
library(knitr)
library(reshape2)
colorsGris <- c("black","#555555", "white")
groupColors3 <- c("#021128", "#fd9706", "#1b4a64" )
groupColors2 <- c("#021128", "#fd9706")
mycols3c <-c("#759580", "#1b4a64")
mycolsStates <-c("#1b4a64", "#fd9706" )
library(patchwork)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(moveHMM)
library(knitr)
library(reshape2)
colorsGris <- c("black","#555555", "white")
groupColors3 <- c("#021128", "#fd9706", "#1b4a64" )
groupColors2 <- c("#021128", "#fd9706")
mycols3c <-c("#759580", "#1b4a64")
mycolsStates <-c("#1b4a64", "#fd9706" )
#DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA <- read.csv("../data/datosParaFiguras.csv")
DF_HARVEST_GAMMA$state <-  (-DF_HARVEST_GAMMA$state) + 3
DF_HARVEST_GAMMA <- DF_HARVEST_GAMMA %>%
separate(ID, into = c("Finca", "IDREC"), sep = "_", remove = T)
DF_HARVEST_GAMMA_H <- DF_HARVEST_GAMMA%>%
filter(Finca == "H")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA_I <- DF_HARVEST_GAMMA %>%
filter(Finca == "I")%>%
group_by(IDREC) %>%
mutate(ID_POR_FINCA = cur_group_id())
DF_HARVEST_GAMMA <- rbind(DF_HARVEST_GAMMA_I, DF_HARVEST_GAMMA_H)
rm(DF_HARVEST_GAMMA_I)
rm(DF_HARVEST_GAMMA_H)
#cambiams por E de ecolo
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "H"] <- "C"
DF_HARVEST_GAMMA$Finca[DF_HARVEST_GAMMA$Finca== "I"] <- "E"
DF_HARVEST_RESUMEN <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA)%>%
summarise(observation = sum(conteo)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
View(DF_HARVEST_GAMMA)
DF_HARVEST_RES_porStates <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA, state)%>%
summarise(meanStep = mean(step)) %>%
unite("Finca_ID", c(Finca, ID_POR_FINCA))
View(DF_HARVEST_RES_porStates)
DF_HARVEST_RES_porStates <- DF_HARVEST_GAMMA %>%
group_by(Finca, ID_POR_FINCA, state)%>%
summarise(meanStep = mean(step))
View(DF_HARVEST_RES_porStates)
DF_HARVEST_RES_porStates <- DF_HARVEST_GAMMA %>%
group_by(Finca, state)%>%
summarise(meanStep = mean(step))
DF_HARVEST_RES_porStates <- DF_HARVEST_GAMMA %>%
group_by(Finca, state)%>%
summarise(meanStep = mean(step), sdStep = sd(step), maxStep = max(step), minStep = min(step))
#DF_HARVEST_GAMMA <- read.csv("/home/emilio/archivosTrabajandose/harvestDistribution/distributionAnalisis/data/datosParaFiguras.csv")
DF_HARVEST_GAMMA <- read.csv("../data/datosParaFiguras.csv")
View(DF_HARVEST_GAMMA)
